namespace tests
{
    using System.Linq;

    using EloBuddy;
    using EloBuddy.SDK;
    using EloBuddy.SDK.Events;

    public static class Program
    {
        public static SpellDataInst Q;

        static void Main(string[] args)
        {
            Loading.OnLoadingComplete += Loading_OnLoadingComplete;
        }

        private static void Loading_OnLoadingComplete(System.EventArgs args)
        {
            Q = Player.GetSpell(SpellSlot.Q);
            Chat.Print("injected");
            Obj_AI_Base.OnProcessSpellCast += Obj_AI_Base_OnProcessSpellCast;
        }

        private static void Obj_AI_Base_OnProcessSpellCast(Obj_AI_Base sender, GameObjectProcessSpellCastEventArgs args)
        {
            if (args.Target.IsEnemy && args.Target is AIHeroClient && sender.IsAlly && sender != null)
            {
                var caster = sender as AIHeroClient;
                var target = (AIHeroClient)args.Target;
                var predhp = Prediction.Health.GetPrediction(target, (int)caster.AttackDelay);
                var spelldamage = caster.GetSpellDamage(target, args.Slot);
                var damagepercent = (spelldamage / predhp) * 100;
                var death = damagepercent >= target.HealthPercent || spelldamage >= predhp || caster.GetAutoAttackDamage(target, true) >= predhp;
                
                if (death && target.Buffs.Any(b => b.Name.ToLower().Equals("twitchdeadlyvenom")))
                {
                    Player.CastSpell(Q.Slot);
                }
            }
        }
    }
}
